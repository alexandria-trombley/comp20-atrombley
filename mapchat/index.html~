<!DOCTYPE html>

<html>

<head>
	<meta charset="utf-8" />
	<title>Map Chat</title>
	<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
	<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=true&v=3"></script>
	<link rel="stylesheet" href="style.css" />
	
</head>

<script>

// retrieves location, and uses this to send data to datastore API, and receive class data back 
// also parses the received data, and sends it to be printed to the screen appropriately
function retrieveMessage() {

	navigator.geolocation.getCurrentPosition(function(position) {

		// sets user message
		var mess = "Hello!";

		// determines the location of the user, and puts that location into 
		// storage by google map
		var longitude = position.coords.longitude;
		var latitude = position.coords.latitude;

		// creates new HTTP request object 
		// this will be used to get info from server
		var myRequest = new XMLHttpRequest();

		// parses the data when it has been returned from the server
		myRequest.onreadystatechange = function() {

			if (myRequest.readyState == 4 && myRequest.status == 200) {

				var data = JSON.parse(myRequest.responseText);
				print(data, latitude, longitude, mess);
	
			} else {
				document.getElementById("canvas").innerHTML = "sorry, could not load data.";
			}
				

		}

		// sends user information to post to server
		myRequest.open("POST", "https://secret-about-box.herokuapp.com/sendLocation", true);
		myRequest.setRequestHeader("Content-type","application/x-www-form-urlencoded");

		// make sure all information is in string format
		var YOUR_LATITUDE = latitude.toString();
		var YOUR_LONGITUDE = longitude.toString();
		var sendMessage = "login=LeaAmmerman&lat=" + YOUR_LATITUDE + "&lng=" + YOUR_LONGITUDE + "&message=" + mess;		
		// sends data to the server
		myRequest.send(sendMessage);

				
	});	

}

// prints the class data and the google map, while also calculating the distance of the 
// user from their classmates
function print(data, lat, long, mess) {	

	// put lat long position in storage
	var me = new google.maps.LatLng(lat, long);
	
	// set preferences for how the screen loads 
	var screen_preference = {
		
		zoom: 13,
		center: me,
		mapTypeId: google.maps.MapTypeId.ROADMAP
	};

	var content = "Name: LeaAmmerman";

	// set up variables needed for google map function
	var map;
	var marker;
	var infowindow = new google.maps.InfoWindow();
	var name = "LeaAmmerman";

	// initialize new google map 
	map = new google.maps.Map(document.getElementById("canvas"), screen_preference);

	// put myself on the map
	map.panTo(me);

 	//Create image object that will be used for marker
	var image = {
		url: 'image1.JPG',
		scaledSize: new google.maps.Size(80, 100)
	};

	// create marker for self
	var marker = new google.maps.Marker({
		position: me,
		title: name,
		icon: image
	});

	// put marker on the screen
	marker.setMap(map);

	// open info window when user clicks on window
	AttachInfoWindow(map, marker, content);
	
	// define toRad()
	Number.prototype.toRad = function () {
		return this * Math.PI / 180;
	}

	// iterate through haversine calculation for each classmate
	for (i = 0; i < data.length; i++) {
		// prevents program from updating personal tag with picture
		if (data[i].login != "LeaAmmerman") {

		// Use the haversine formula to calculate the distance between self and other
		// classmates 
		var lat2 = data[i].lat;
		var long2 = data[i].lng;
		var R = 6371;

		var x1 = lat2 - lat;
		var dLat = x1.toRad();
		var x2 = long2 - long;
		var dLong = x2.toRad();
		var a = Math.sin(dLat/2) * Math.sin(dLat/2) + Math.cos(lat.toRad()) * Math.cos(lat2.toRad()) * Math.sin(dLong/2) * Math.sin(dLong/2);
		var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
		var distance = R * c;
		var DISTANCE = distance.toString();

		//print other students' markers to the map
		var student = new google.maps.LatLng(lat2, long2);
		var marker = new google.maps.Marker({
			position: student,
			title: data[i].login
		});
		marker.setMap(map);
		
		// concatonate info for info window
		var StudentContent = "Name: " + data[i].login + '<br>' + "Message: " + data[i].message + '<br>' + "Distance: " + DISTANCE;

		// open info window when user clicks on window
		AttachInfoWindow(map, marker, StudentContent);

		}
	
	}	
}

// attaches infowindow to marker
// need separate function so the loop has closure
function AttachInfoWindow (map, marker, StudentContent) {
	var infowindow = new google.maps.InfoWindow();
	google.maps.event.addListener(marker, 'click', function() {
		infowindow.setContent(StudentContent);
		infowindow.open(map, this);
	});
	
}	

</script>

<body onload="retrieveMessage()">

	<div id="canvas"><div/>

</body>

</html>
